@startuml
interface Door {
    +lock()
    +unlock()
    +open()
    +close()
    +timeOutCallback()
    +proximityCallback()
}

class SensingDoor {
    -_locked : boolean
    -_opened : boolean
    +SensingDoor(sensor:Sensor)
    +lock() : void
    +unlock() : void
    +open() : void
    +close() : void
    +timeOutCallback() : void
    +proximityCallback() : void
}

class TimedDoor {
    -_locked : boolean
    -_opened : boolean
    -TIME_OUT : int
    +TimedDoor(timer:Timer)
    +lock() : void
    +unlock() : void
    +open() : void
    +close() : void
    +timeOutCallback() : void
    +proximityCallback() : void
}

class Sensor {
    +register(door : Door) : void
    -isPersonClose() : boolean
}

class Timer {
    +register(timeOut : long, door : Door) : void
}

Door <|.. SensingDoor
Door <|.. TimedDoor
Sensor <.. SensingDoor : depends
Timer <.. TimedDoor : depends
Door <.. Sensor : depends
Door <.. Timer : depends

@enduml
